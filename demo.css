@import url(https://fonts.googleapis.com/css?family=Montserrat:400,700);
* {
	margin: 0;
	padding: 0;
	cursor: default;
	box-sizing: border-box;
	text-rendering: optimizeLegibility;
}

body {
	font-family: Montserrat, sans-serif;
	font-size: 1rem;
	color: hsl(0, 0%, 30%);
	background: hsl(0, 0%, 10%);
	scroll-snap-type: mandatory;
	scroll-snap-points-y: repeat(100vh);
	scroll-behavior: smooth;
}

.button {
	position: relative;
	z-index: 10;
	cursor: pointer;
	background: hsla(0, 0%, 0%, .25);
	color: hsl(0, 0%, 60%);
	border: 2px solid hsl(0, 0%, 40%);
	border-radius: .25em;
	padding: .25em .5em;
	margin: .5em 0 0 .5em;
	text-transform: uppercase;
	transition: .25s;
	float: left;
}

.button:hover {
	background: hsla(0, 0%, 0%, .25);
	color: hsl(0, 0%, 80%);
	border: 2px solid hsl(0, 0%, 40%);
}

svg {}

#cube svg,
#cube .face {
	stroke: hsl(30, 90%, 60%);
	stroke-width: 1;
	stroke-dasharray: 2000;
	stroke-dashoffset: 2000;
}

#cube .face {
	stroke-width: 2;
}

#cube.stroke svg {
	animation: stroke 10s linear alternate infinite;
}

#cube.strokeIN svg {
	animation: strokeIN 6s 5s linear forwards;
}

#cube.strokeOUT svg {
	animation: strokeOUT 6s linear forwards;
}

rect,
polygon,
path {
	fill: hsla(0, 0%, 0%, .25);
}

.screen {
	position: relative;
	width: 100%;
	height: 100vh;
	perspective: 50rem;
	overflow: hidden;
}

#top_port {}


/****/

.frame {
	position: absolute;
	z-index: 1;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	margin: auto;
	width: 300px;
	height: 300px;
	border: 1px solid hsla(0, 0%, 15%, 1);
	transition: .5s cubic-bezier(0.5, -0.5, 0.5, 1.5);
}

h1,
h2,
h3 {
	position: absolute;
	z-index: 1;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
	text-align: center;
	white-space: nowrap;
	color: hsla(0, 0%, 25%, 1);
	transition: .5s cubic-bezier(0.5, -0.5, 0.5, 1.5);
}

h1 {
	font-size: 4rem;
	font-weight: 7oo;
}

h2 {
	font-size: 3rem;
	font-weight: 7oo;
}

h3 {
	font-size: 2.25rem;
	font-weight: 7oo;
}

/****/

h1:hover {
	color: hsl(30, 90%, 20%);
}

#welcome {
	cursor: pointer;
}

#port {
	position: absolute;
	z-index: 2;
	width: 400px;
	height: 400px;
	transform-style: preserve-3d;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	margin: auto;
	transition: .5s cubic-bezier(0.5, -0.5, 0.5, 1.5);
}

#port.move_far {
	transform: translateZ(-1500px);
}

#port.move_normal {
	transform: translateZ(-500px);
}

#port.move_close {
	transform: translateZ(50px);
}

#cube {
	position: absolute;
	width: 400px;
	height: 400px;
	top: 0;
	left: 0;
	transform-style: preserve-3d;
}

#back,
#front,
#left,
#right,
#top,
#bottom {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	transform-style: preserve-3d;
}

#back {
	transform: translateZ(-200px) rotateY(180deg);
}

#front {
	transform: translateZ(200px);
}

#left {
	transform: translateX(-200px) rotateY(-90deg);
}

#right {
	transform: translateX(200px) rotateY(90deg);
}

#top {
	transform: translateY(-200px) rotateX(90deg);
}

#bottom {
	transform: translateY(200px) rotateX(90deg);
}

svg {
	position: absolute;
	top: 0;
	left: 0;
	transform-origin: top left;
}

svg.d1 {
	transform: translateZ(-100px);
}

svg.d2 {
	transform: translateZ(-150px);
}

svg.d3 {
	transform: translateZ(-250px);
}

svg.d4 {
	transform: translateZ(-300px);
}

.spinX {
	animation: spinX 15s infinite linear;
}

.spinXinv {
	animation: spinXinv 15s infinite linear;
}

.spinY {
	animation: spinY 15s infinite linear;
}

.spinYinv {
	animation: spinYinv 15s infinite linear;
}

.spinZ {
	animation: spinZ 15s infinite linear;
}

.spinZinv {
	animation: spinZinv 15s infinite linear;
}

.spinXYZ {
	animation: spinXYZ 15s 2s infinite linear;
}


/*[Animations]*/

@-webkit-keyframes spinXYZ {
	from {
		transform: translateZ(-400px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
	}
	to {
		transform: translateZ(-400px) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
	}
}

@keyframes spinXYZ {
	from {
		transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
	}
	to {
		transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
	}
}

@-webkit-keyframes spinX {
	from {
		transform: rotateX(0deg);
	}
	to {
		transform: rotateX(360deg);
	}
}

@keyframes spinX {
	from {
		transform: rotateX(0deg);
	}
	to {
		transform: rotateX(360deg);
	}
}

@-webkit-keyframes spinXinv {
	from {
		transform: rotateX(0deg);
	}
	to {
		transform: rotateX(-360deg);
	}
}

@keyframes spinXinv {
	from {
		transform: rotateX(0deg);
	}
	to {
		transform: rotateX(-360deg);
	}
}

@-webkit-keyframes spinY {
	from {
		transform: rotateY(0deg);
	}
	to {
		transform: rotateY(360deg);
	}
}

@keyframes spinY {
	from {
		transform: rotateY(0deg);
	}
	to {
		transform: rotateY(360deg);
	}
}

@-webkit-keyframes spinYinv {
	from {
		transform: rotateY(0deg);
	}
	to {
		transform: rotateY(-360deg);
	}
}

@keyframes spinYinv {
	from {
		transform: rotateY(0deg);
	}
	to {
		transform: rotateY(-360deg);
	}
}

@-webkit-keyframes spinZ {
	from {
		transform: rotateZ(0deg);
	}
	to {
		transform: rotateZ(360deg);
	}
}

@keyframes spinZ {
	from {
		transform: rotateZ(0deg);
	}
	to {
		transform: rotateZ(360deg);
	}
}

@-webkit-keyframes spinZinv {
	from {
		transform: rotateZ(0deg);
	}
	to {
		transform: rotateZ(-360deg);
	}
}

@keyframes spinZinv {
	from {
		transform: rotateZ(0deg);
	}
	to {
		transform: rotateZ(-360deg);
	}
}

@-webkit-keyframes stroke {
	0% {
		stroke-dashoffset: 2000;
	}
	100% {
		stroke-dashoffset: 0;
	}
}

@keyframes stroke {
	0% {
		stroke-dashoffset: 2000;
	}
	100% {
		stroke-dashoffset: 0;
	}
}

@-webkit-keyframes strokeIN {
	0% {
		stroke-dashoffset: 2000;
	}
	100% {
		stroke-dashoffset: 0;
	}
}

@keyframes strokeIN {
	0% {
		stroke-dashoffset: 2000;
	}
	100% {
		stroke-dashoffset: 0;
	}
}

@-webkit-keyframes strokeOUT {
	0% {
		stroke-dashoffset: 0;
	}
	100% {
		stroke-dashoffset: 2000;
	}
}

@keyframes strokeOUT {
	0% {
		stroke-dashoffset: 0;
	}
	100% {
		stroke-dashoffset: 2000;
	}
}
